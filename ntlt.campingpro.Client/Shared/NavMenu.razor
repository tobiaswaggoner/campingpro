@using ntlt.campingpro.state.CustomerSystem;
@inject CustomerState CustomerState
@inject ViewState ViewState

<div class="top-row pl-4 navbar navbar-dark">

    <a class="navbar-brand" href="">
        @if (ViewState.Connected)
        {
            <span class="oi oi-circle-check text-success"></span>
        }
        else
        {
            <span class="oi oi-flash text-danger"></span>
        }
        @ViewState.Headline?.Substring(0, Math.Min(ViewState.Headline.Length, 20))
    </a>
    <button class="navbar-toggler" @onclick="ToggleNavMenu">
        <span class="navbar-toggler-icon"></span>
    </button>
</div>

<div class="@NavMenuCssClass" @onclick="ToggleNavMenu">
    <ul class="nav flex-column">
        <li class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="oi oi-home" aria-hidden="true"></span> Home
            </NavLink>
        </li>
        <li class="nav-item px-3">
            <NavLink class="nav-link" href="customerlist">
                <span class="oi oi-list-rich" aria-hidden="true"></span> Customers
            </NavLink>
        </li>
        <li class="nav-item px-3">
            <NavLink class="nav-link" href="eventstoreviewer">
                <span class="oi oi-list-rich" aria-hidden="true"></span> Events
            </NavLink>
        </li>
    </ul>
</div>

@code {
    private bool collapseNavMenu = true;

    private string NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    protected override void OnInitialized()
    {
        base.OnInitialized();
        ViewState.OnViewStateChanged += (_, _) => StateHasChanged();
    }

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

}